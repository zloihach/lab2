import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'application'
    id 'org.beryx.jlink' version '2.25.0'
}

repositories {
    mavenCentral()

    flatDir {
        dirs "${project(':demo').projectDir}/libs"
    }
}

dependencies {
    testImplementation "org.testfx:testfx-core:4.0.16-alpha"
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation name: 'scenicview'
    implementation("fr.brouillard.oss:cssfx:11.4.0") { exclude group: 'org.openjfx' }
    implementation 'org.kordamp.ikonli:ikonli-core:12.2.0'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.2.0'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.2.0'
    implementation 'io.github.palexdev:virtualizedfx:11.2.6'
    implementation project(':materialfx')
}

compileTestJava {
    moduleOptions {
        compileOnClasspath = true
    }
}

test {
    useJUnitPlatform()

    moduleOptions {
        runOnClasspath = true
    }
}

application {
    setMainModule("MaterialFX.Demo")
    String main = project.findProperty("chooseMain").toString()
    if (main != "null" && !main.trim().isEmpty()) {
        setMainClassName(main)
    } else {
        setMainClassName("io.github.palexdev.materialfx.demo.Demo")
    }
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        mainClass = "io.github.palexdev.materialfx.demo.Demo"
        name = 'MaterialFX Demo'
    }
    jpackage {
        imageOptions = ['--icon', 'src/main/resources/logo.ico']
    }

    targetPlatform("linux-x64") {
        jdkHome = jdkDownload("https://cdn.azul.com/zulu/bin/zulu17.32.13-ca-jdk17.0.2-linux_x64.tar.gz")
        addExtraModulePath("/home/palexdev/Documents/JavaFX_jmods/linux_x64")
    }

    targetPlatform("win") {
        jdkHome = jdkDownload("https://cdn.azul.com/zulu/bin/zulu17.32.13-ca-jdk17.0.2-win_x64.zip")
        addExtraModulePath("/home/palexdev/Documents/JavaFX_jmods/win_x64")
    }

    targetPlatform("mac") {
        jdkHome = jdkDownload("https://cdn.azul.com/zulu/bin/zulu17.32.13-ca-jdk17.0.2-macosx_x64.tar.gz")
        addExtraModulePath("/home/palexdev/Documents/JavaFX_jmods/mac_x64")
    }

    addExtraDependencies('javafx')
}

task doPackageAll {
    if (Os.isFamily(Os.FAMILY_UNIX)) {
        exec {
            executable "$projectDir/scripts/JLinkPackage.sh"
            args = ["$buildDir"]
        }
    }
}

jlinkZip.doLast {
    doPackageAll
}